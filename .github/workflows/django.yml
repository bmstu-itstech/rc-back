name: Django CI

on:
  push
  
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.12]

    steps:
    - uses: actions/checkout@v4

    - name: Install Poetry
      run: |
        pipx install poetry

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: poetry
        cache-dependency-path: poetry.lock

    - name: Set Poetry environment
      run: |
        poetry env use ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        poetry install --no-root

    - name: Run Tests
      run: |
        poetry run pytest

    - name: Run Code Style
      run: |
        poetry run flake8 rs_back/

  deploy:
    name: "Deploy to staging"
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: test
    steps:
    - name: Deploy
      uses: appleboy/ssh-action@v0.1.10
      env:
        DJANGO_SUPERUSER_USERNAME: ${{ secrets.DJANGO_SUPERUSER_USERNAME }}
        DJANGO_SUPERUSER_PASSWORD: ${{ secrets.DJANGO_SUPERUSER_PASSWORD }}
        DJANGO_SUPERUSER_EMAIL: ${{ secrets.DJANGO_SUPERUSER_EMAIL }}
        DEBUG: False
        SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
        ALLOWED_HOSTS: ${{ env.ALLOWED_HOSTS }}
        CSRF_TRUSTED_ORIGINS: ${{ env.CSRF_TRUSTED_ORIGINS }}
        CORS_ORIGIN_ALLOW_ALL: False
        CORS_ORIGIN_WHITELIST: ${{ env.CORS_ORIGIN_WHITELIST }}
        POSTGRES_DB: ${{ env.POSTGRES_DB }}
        POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
        POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        script_stop: true
        script: |
          cd ${{ secrets.PROJECT_FOLDER }};
          git checkout main;
          git pull;
          docker compose -f docker-compose.prod.yml down;
          docker compose -f docker-compose.prod.yml up -d;
