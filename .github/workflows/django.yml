name: Django CI

on:
  push
  
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.12]

    steps:
    - uses: actions/checkout@v4

    - name: Install Poetry
      run: |
        pipx install poetry

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: poetry
        cache-dependency-path: poetry.lock

    - name: Set Poetry environment
      run: |
        poetry env use ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        poetry install --no-root

    - name: Run Tests
      run: |
        poetry run python manage.py test rs_back

    - name: Run Code Style
      run: |
        poetry run flake8 rs_back/

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run command on remote server
        uses: D3rHase/ssh-command-action@v0.2.2
        with:
          host: ${{ secrets.SSH_HOST }}
          user: ${{ secrets.SSH_USER }}
          private_key: ${{ secrets.SSH_PRIVATE_KEY }}
          command: |
            cd ${{ secrets.PROJECT_FOLDER }};
            git checkout main;
            git pull;
            docker-compose -f docker-compose.prod.yml down;
            docker-compose -f docker-compose.prod.yml up -d;
            docker system prune --all --force;
