name: Django CI

on:
  push
  
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.12]

    steps:
    - uses: actions/checkout@v4

    - name: Install Poetry
      run: |
        pipx install poetry

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: poetry
        cache-dependency-path: poetry.lock

    - name: Set Poetry environment
      run: |
        poetry env use ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        poetry install --no-root

    - name: Run Tests
      run: |
        poetry run python manage.py test rs_back

    - name: Run Code Style
      run: |
        poetry run flake8 rs_back/

  deploy:
    name: "Deploy to staging"
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: test
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/staging.key
          chmod 600 ~/.ssh/staging.key
          cat >>~/.ssh/config <<END
          Host staging
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/staging.key
            StrictHostKeyChecking no
          END
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_KEY: ${{ secrets.SSH_KEY }}

      - name: Start the server
        run: ssh staging '
          cd ${{ secrets.PROJECT_FOLDER }};
          git checkout main;
          git pull;
          docker-compose -f docker-compose.prod.yml down;
          docker-compose -f docker-compose.prod.yml up -d;
          docker system prune --all --force;'
